#if defined(ARDUINO) && ARDUINO > 18
#include <SPI.h>
#endif
#include <NewSoftSerial.h>

NewSoftSerial rfid(2,3);
char tagString[12];
int index;
int total;
boolean readStart;
boolean readStop;
int pinUsa = 7;
unsigned long timpStart;
int interval = 1*1000;

struct rfid_tag {
  char tag[13];
  char nickName[20];
};
#define NUM_TAGS  8
struct rfid_tag tags[NUM_TAGS] = { 
    {"46004D5ACA9B", "1"  },  // this is an example. Put your unique codes here

};
void setup(){
  delay(1000);
  Serial.begin(9600);
  rfid.begin(9600);
  pinMode(pinUsa, OUTPUT);
  rfidReset();
}
void loop(){
  if(Serial.available()){
    char readByte = Serial.read();
    switch (readByte){
    case 'a':
      deschideUsa();
      break;
    case 'b':
      delay(1500);
      break;
    default:
      break;
    }
  }
  if(rfid.available() > 0){
    int readByte = rfid.read(); 
    total++;
    switch(readByte){
    case 2:
      readStart = true;
      total = 1;
      index = 0;
      break;
    case 3:
      readStop = true;
      break;
    case 10:
    case 13:
      break;
    default:
      tagString[index++] = readByte;
      break;
    }
  }
  if(total > 16){
    delay(100);
    rfid.flush();
    rfidReset();
  }
  else   if(readStart && readStop && index == 12){
    Serial.print("1=");
    for(int i = 0; i < index; i++){
      Serial.print(tagString[i],BYTE);
    }
    Serial.print(";");
    checkTag(tagString);
    rfidReset();
    //clearTag(tagString); //Clear the char of all value
  }
  //inchid usa daca a stat deschisa destul timp
  if(timpStart+interval<=millis())
    digitalWrite(pinUsa,LOW);
}
void rfidReset(){
  total = 0;
  index = 0;
  readStart = false;
  readStop = false;
  for(int i = 0; i < strlen(tagString); i++){
    tagString[i] = 0;
  }
}
void checkTag(char tag[]){
 
  if(strlen(tag) == 0) return;
  for(int i=0; i<NUM_TAGS; i++) {
    if(copmarTag(tag, tags[i].tag)){
      deschideUsa();
      delay(1000);
      digitalWrite(pinUsa,LOW); 
      software_Reset();
    }
  }
}
boolean copmarTag(char one[], char two[]){
  if(strlen(one) == 0) return false; //empty
  for(int i = 0; i < 12; i++){
    if(one[i] != two[i]) return false;
  }
  return true; //no mismatches
}
void deschideUsa(){
  timpStart = millis();
  digitalWrite(pinUsa,HIGH);
  delay(5000);
  digitalWrite(pinUsa,LOW);
  
}
void software_Reset() // Restarts program from beginning but does not reset the peripherals and registers
{
  asm volatile ("  jmp 0");  
}

